

generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Swimmer {
  id Int @id @default(autoincrement())
  email String @unique
  age Int 
  name String
  pace100 Int //pace in seconds
  pace1000 Int
  level Int //from 1 to 10
  trainings Training[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Exercise {
  id Int @id @default(autoincrement())
  Summary String @unique
  trainingFocuses TrainingFocus[]
  minRecommendedLevel Int
  maxRecommendedLevel Int
  minLength Int //in meters
  maxLength Int //in meters
  TrainingExercises TrainingExercise[]
  equipment Equipment[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  appliedToStages TrainingStage[]
  paceMultiplier Float //decrease of pace for time calculation
}

model Training {
  id Int @id @default(autoincrement())
  swimmer Swimmer @relation(fields: [swimmerId], references: [id])
  swimmerId Int
  TrainingExercises TrainingExercise[]
  status Status
  createdAt DateTime @default(now())
  doneAt DateTime?
}

model TrainingExercise {
  id Int @id @default(autoincrement())
  training Training @relation(fields: [trainingId], references: [id])
  trainingId Int
  exercise Exercise @relation(fields: [exerciseId], references: [id])
  exerciseId Int
  length Int
  trainingStage TrainingStage
}

enum TrainingFocus {
  LEGS
  ARMS
  BALANCE
  POWER
  BODY_POSITION
  HANDS_CHANGE
}

enum Equipment {
  FINS
  BOUY
  HANDS
}

enum Status {
  CREATED
  DONE
}

enum TrainingStage {
  WARM_UP
  TECHNIQUE
  SPEED_SERIES
}